Questions:
• What will be printed?
  ANS: Meow. I am a cat. My name is Kurre
       and I am 6 years old.
       Woof. I am a dog. My name is Vilma
       and I am 3 years old.

• Explain how it is that the instance variable age of Animal can be used in Cat and Dog when it is declared in Animal.
  ANS: It is because Cat and Dog are inheritance of Animal. So when variable age is declared in Animal we does need to declared again in Cat and Dog.
  
• What actually consists an instance of?
  ANS: An instance, in object-oriented programming (OOP), is a specific realization of any object. An object may be varied in a number of ways. Each realized variation of that object is an instance. The creation of a realized instance is called instantiation.

• And what consists a class of?
  ANS: In object-oriented programming , a class is a template definition of the method s and variable s in a particular kind of object . Thus, an object is a specific instance of a class; it contains real values instead of variables. The class is one of the defining ideas of object-oriented programming.

• What is the difference between a class and an instance?
  ANS: A class is declared inside the class definition (but outside any of the instance methods). They are not tied to any particular object of the class, hence shared across all the objects of the class. Modifying a class variable affects all objects instance at the same time.
       A instance is declared inside the constructor method of class.

• Change the declaration of the instance variable age of Animal to a class variable using static, in this way:
public static int age;
• What is the result of the output now? Why?
  ANS: Meow. I am a cat. My name is null
       and I am 3 years old.
       Woof. I am a dog. My name is null
       and I am 3 years old.
  
• It may happen that you get warnings from the compiler that you should access the variable age via Animal.age, but it should be possible to run the program anyway. Otherwise, change the references to age into Animal.age.
• Where is the value of an instance variable stored?
  ANS: The value of an instance variable stored at the class which defining it.
  
• Where is the value of a class variable stored?
  ANS: The value of an class variable stored inside the class memory itself 
  
• What refers the variable this to?
  ANS: this can be used to refer current class instance variable.
